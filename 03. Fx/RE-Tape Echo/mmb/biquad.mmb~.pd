#N canvas 144 28 1284 702 10;
#X obj 154 342 czero~;
#X obj 154 402 czero~;
#X obj 154 457 cpole~;
#X obj 154 517 cpole~;
#X obj 154 35 inlet~ audio;
#X obj 584 35 inlet~ b0;
#X obj 674 35 inlet~ b1;
#X obj 764 35 inlet~ b2;
#X obj 404 35 inlet~ a1;
#X obj 494 35 inlet~ a2;
#N canvas 0 22 450 300 extract.gain 0;
#X obj 92 74 inlet~;
#X obj 92 185 outlet~;
#X obj 212 74 inlet~;
#X obj 352 74 inlet~;
#X obj 212 185 outlet~;
#X obj 352 185 outlet~;
#X obj 212 141 /~;
#X obj 352 141 /~;
#X connect 0 0 1 0;
#X connect 0 0 6 1;
#X connect 0 0 7 1;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X restore 584 154 pd extract.gain;
#N canvas 0 22 668 429 get.zero.locations 0;
#X obj 125 76 inlet~;
#X obj 324 76 inlet~;
#X obj 201 160 expr~ $v1*$v1 - 4*$v2;
#N canvas 680 22 715 527 zero1 0;
#X obj 78 86 inlet~;
#X obj 243 86 inlet~;
#X obj 180 140 expr~ sqrt(($v1>=0)*$v1);
#X obj 78 273 complex_add.mmb~;
#X obj 78 420 outlet~;
#X obj 171 420 outlet~;
#X obj 78 366 complex_div.mmb~;
#X obj 168 323 sig~ 2;
#X text 310 185 if sqrt(b^2-4ac) is less than 0 \, make it the imaginary
part of the numerator. Else \, add it to the real part (imaginary stays
zero).;
#X text 226 273 -b + ...;
#X obj 356 140 expr~ sqrt(($v1<0)*abs($v1));
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 3 2;
#X connect 3 0 6 0;
#X connect 3 1 6 1;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X connect 7 0 6 2;
#X connect 10 0 3 3;
#X restore 125 242 pd zero1;
#N canvas 680 22 715 527 zero2 0;
#X obj 78 86 inlet~;
#X obj 243 86 inlet~;
#X obj 356 140 expr~ sqrt(($v1<0)*abs($v1 ));
#X obj 180 140 expr~ sqrt(($v1>=0)*$v1);
#X obj 78 420 outlet~;
#X obj 171 420 outlet~;
#X obj 78 366 complex_div.mmb~;
#X obj 168 323 sig~ 2;
#X text 310 185 if sqrt(b^2-4ac) is less than 0 \, make it the imaginary
part of the numerator. Else \, add it to the real part (imaginary stays
zero).;
#X obj 78 273 complex_sub.mmb~;
#X text 226 273 -b - ...;
#X connect 0 0 9 0;
#X connect 1 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 9 3;
#X connect 3 0 9 2;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X connect 7 0 6 2;
#X connect 9 0 6 0;
#X connect 9 1 6 1;
#X restore 197 243 pd zero2;
#X obj 121 336 outlet~;
#X obj 181 336 outlet~;
#X obj 241 336 outlet~;
#X obj 301 336 outlet~;
#X obj 125 159 *~ -1;
#X text 416 207 ---------------------;
#X text 461 218 2a;
#X text 370 193 roots = -b +/- sqrt(b^2 - 4ac);
#X text 305 244 Note: becase b0 is extracted from coefficents \, a
in the quadratic will always be 1;
#X connect 0 0 2 0;
#X connect 0 0 9 0;
#X connect 1 0 2 1;
#X connect 2 0 3 1;
#X connect 2 0 4 1;
#X connect 3 0 5 0;
#X connect 3 1 6 0;
#X connect 4 0 7 0;
#X connect 4 1 8 0;
#X connect 9 0 3 0;
#X connect 9 0 4 0;
#X restore 605 208 pd get.zero.locations;
#X obj 154 564 outlet~;
#X obj 154 262 *~;
#N canvas 663 40 664 509 get.pole.locations 0;
#X obj 125 76 inlet~;
#X obj 324 76 inlet~;
#X obj 121 336 outlet~;
#X obj 181 336 outlet~;
#X obj 241 336 outlet~;
#X obj 301 336 outlet~;
#N canvas 680 22 715 527 pole1 0;
#X obj 78 86 inlet~;
#X obj 243 86 inlet~;
#X obj 180 140 expr~ sqrt(($v1>=0)*$v1);
#X obj 78 273 complex_add.mmb~;
#X obj 78 420 outlet~;
#X obj 171 420 outlet~;
#X obj 78 366 complex_div.mmb~;
#X obj 168 323 sig~ 2;
#X text 310 185 if sqrt(b^2-4ac) is less than 0 \, make it the imaginary
part of the numerator. Else \, add it to the real part (imaginary stays
zero).;
#X text 226 273 -b + ...;
#X obj 356 140 expr~ sqrt(($v1<0)*abs($v1));
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 3 2;
#X connect 3 0 6 0;
#X connect 3 1 6 1;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X connect 7 0 6 2;
#X connect 10 0 3 3;
#X restore 125 242 pd pole1;
#N canvas 680 22 715 527 pole2 0;
#X obj 78 86 inlet~;
#X obj 243 86 inlet~;
#X obj 356 140 expr~ sqrt(($v1<0)*abs($v1 ));
#X obj 180 140 expr~ sqrt(($v1>=0)*$v1);
#X obj 78 420 outlet~;
#X obj 171 420 outlet~;
#X obj 78 366 complex_div.mmb~;
#X obj 168 323 sig~ 2;
#X text 310 185 if sqrt(b^2-4ac) is less than 0 \, make it the imaginary
part of the numerator. Else \, add it to the real part (imaginary stays
zero).;
#X obj 78 273 complex_sub.mmb~;
#X text 226 273 -b - ...;
#X connect 0 0 9 0;
#X connect 1 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 9 3;
#X connect 3 0 9 2;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X connect 7 0 6 2;
#X connect 9 0 6 0;
#X connect 9 1 6 1;
#X restore 197 243 pd pole2;
#X obj 125 159 *~ 1;
#X obj 201 160 expr~ $v1*$v1 + 4*$v2;
#X text 395 225 ---------------------;
#X text 440 236 2a;
#X text 349 211 roots = -b +/- sqrt(b^2 - 4ac);
#X text 285 253 Note: since a0 is assumed to be 1 \, a in the quadratic
will always be 1;
#X text 344 160 < - because it should be -a1 and -a2;
#X connect 0 0 8 0;
#X connect 0 0 9 0;
#X connect 1 0 9 1;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X connect 7 0 4 0;
#X connect 7 1 5 0;
#X connect 8 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 6 1;
#X connect 9 0 7 1;
#X restore 462 377 pd get.pole.locations;
#X text 900 166 y[n] = b0*x[n] + b1*x[n-1] + b2*x[n-2];
#X text 943 183 - a1*y[n-1] - a2*y[n-2];
#X text 843 138 Difference Equation:;
#X text 852 244 z-Transform:;
#X text 901 271 H(z) = b0 + b1*z^-1 + b2*z^-2;
#X text 943 280 ----------------------;
#X text 947 291 1 + a1*z^-1 + a2*z^-2;
#X text 967 560 .mmb;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 3 0 12 0;
#X connect 4 0 13 0;
#X connect 5 0 10 0;
#X connect 6 0 10 1;
#X connect 7 0 10 2;
#X connect 8 0 14 0;
#X connect 9 0 14 1;
#X connect 10 0 13 1;
#X connect 10 1 11 0;
#X connect 10 2 11 1;
#X connect 11 0 0 2;
#X connect 11 1 0 3;
#X connect 11 2 1 2;
#X connect 11 3 1 3;
#X connect 13 0 0 0;
#X connect 14 0 2 2;
#X connect 14 1 2 3;
#X connect 14 2 3 2;
#X connect 14 3 3 3;
