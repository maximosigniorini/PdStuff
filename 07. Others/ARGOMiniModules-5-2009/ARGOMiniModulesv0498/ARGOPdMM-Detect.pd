#N canvas 366 158 201 144 10;
#N canvas 347 177 410 325 ARGO 0;
#X obj 101 101 cnv 12 164 15 empty ColorAmpli empty 20 12 0 14 -261299
-1 1.04858e+06;
#X obj 165 104 cnv 10 20 10 empty ColorAmpli DetectEnvelope 1 5 1 14
-261299 -1 1.04858e+06;
#X obj 101 101 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 101 112 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 81 297 outlet~;
#X obj 89 74 inlet~;
#X obj 52 151 abs~;
#X obj 50 269 lop~ 5;
#X obj 113 102 nbx 4 12 0.1 9999 0 1 \$0-A ColorTime ms 40 7 1 9 -208064
-1 -1 10 256;
#X obj 83 245 /;
#X msg 82 220 1;
#X obj 82 195 t b f;
#X text 108 22 Freq(Hz) = 1 / 2 x pi x Time constant(sec);
#X text 162 37 = 1 / 6.28 x (Time constant(ms) / 1000);
#X text 163 51 = 1 / 6.28 x (Time constant(ms) / 1000);
#X text 164 66 = 1 / 0.00628 x Time constant(ms);
#X obj 82 173 * 0.00628;
#X text 96 117 Env;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 8 0 16 0;
#X connect 9 0 7 1;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 11 1 9 1;
#X connect 16 0 11 0;
#X coords 0 -1 1 1 166 17 1 100 100;
#X restore 18 13 pd ARGO;
#N canvas 123 103 339 298 ARGO 0;
#X obj 101 101 cnv 12 104 34 empty ColorAmpli empty 20 12 0 14 -261299
-1 1.04858e+06;
#X obj 180 104 cnv 10 20 10 empty ColorAmpli Trig 1 5 1 14 -261299
-1 1.04858e+06;
#X obj 101 101 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 101 131 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 51 66 inlet~;
#X obj 48 220 threshold~ 10 100 0 100;
#X obj 179 115 tgl 15 0 \$0-A \$0-B empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 48 247 1;
#X msg 184 246 0;
#X msg 62 198 set \$1 20 \$2 20;
#X obj 100 106 nbx 4 12 -1 1 0 1 \$0-A ColorAmpli HighLimit 40 7 1
9 -261299 -1 -1 0.02 256;
#X obj 62 176 pack 1 2;
#X obj 100 118 nbx 4 12 -1 1 0 1 \$0-A ColorAmpli LowLimit 40 7 1 9
-261299 -1 -1 0.01 256;
#X obj 82 153 t b f;
#X text 95 136 0..1;
#X obj 228 266 outlet~;
#X obj 227 240 expr~ 2 * $v1 -1;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 5 1 8 0;
#X connect 6 0 16 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 5 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 13 0;
#X connect 13 0 11 0;
#X connect 13 1 11 1;
#X connect 16 0 15 0;
#X coords 0 -1 1 1 106 36 1 100 100;
#X restore 18 41 pd ARGO;
#N canvas 233 191 480 345 ARGO 0;
#X obj 76 190 outlet~;
#X obj 84 53 inlet~;
#X obj 52 94 dfreq~;
#X text 41 20 a frequency detector that counts zero-crossings;
#X text 24 7 dfreq~ (zexy library);
#X obj 101 101 cnv 12 150 16 empty ColorAmpli empty 20 12 0 14 -208064
-1 1.04858e+06;
#X obj 179 105 cnv 10 20 10 empty ColorAmpli DetectFreq 1 5 1 14 -208064
-1 1.04858e+06;
#X obj 101 113 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 101 101 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 52 119 ftom~;
#X obj 52 144 /~ 240;
#X text 267 75 avant de connecter DetectFreq;
#X text 268 63 Régler un Oscill a C-2;
#X text 267 86 pour qu'il soit accordé.;
#X text 291 102 Adjust an Oscill to C-2;
#X text 291 114 before connecting DetectFreq;
#X text 290 125 so that it is tuned.;
#X obj 22 219 cnv 15 370 120 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 35 236 every zero-crossing the frequency-estimation is updated
\, therefore this estimation is given as a signal...;
#X text 34 263 this detector won't work properly on complex signals
(e.g. zero-crossings should not be caused by higher partials);
#X text 32 290 on the other hand \, this is much cheaper than fft's
or fiddle...;
#X text 31 316 thanks to w.ritsch for this one;
#X text 25 219 Citation;
#X obj 148 131 snapshot~;
#X obj 148 153 change;
#X obj 149 52 r \$0-SendClic;
#X obj 113 103 nbx 6 12 0.1 20000 0 1 \$0-A ColorTime Hz 53 7 1 9 -208064
-1 -1 423.305 256;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 2 0 23 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 25 0 23 0;
#X coords 0 -1 1 1 152 18 2 100 100;
#X restore 18 104 pd ARGO;
#N canvas 163 224 480 345 ARGO 0;
#X obj 76 190 outlet~;
#X obj 84 53 inlet~;
#X obj 52 94 dfreq~;
#X text 41 20 a frequency detector that counts zero-crossings;
#X text 24 7 dfreq~ (zexy library);
#X obj 101 101 cnv 12 150 16 empty ColorAmpli empty 20 12 0 14 -208064
-1 1.04858e+06;
#X obj 173 105 cnv 10 20 10 empty ColorAmpli DetectFreq+ 1 5 1 14 -208064
-1 1.04858e+06;
#X obj 101 113 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 101 101 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 52 119 ftom~;
#X obj 52 144 /~ 240;
#X text 267 75 avant de connecter DetectFreq;
#X text 268 63 Régler un Oscill a C-2;
#X text 267 86 pour qu'il soit accordé.;
#X text 291 102 Adjust an Oscill to C-2;
#X text 291 114 before connecting DetectFreq;
#X text 290 125 so that it is tuned.;
#X obj 22 219 cnv 15 370 120 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 35 236 every zero-crossing the frequency-estimation is updated
\, therefore this estimation is given as a signal...;
#X text 34 263 this detector won't work properly on complex signals
(e.g. zero-crossings should not be caused by higher partials);
#X text 32 290 on the other hand \, this is much cheaper than fft's
or fiddle...;
#X text 31 316 thanks to w.ritsch for this one;
#X text 25 219 Citation;
#X obj 148 131 snapshot~;
#X obj 148 153 change;
#X obj 149 52 r \$0-SendClic;
#X obj 111 103 nbx 6 12 0.1 20000 0 1 \$0-A ColorTime Hz 53 7 1 9 -208064
-1 -1 401.396 256;
#X obj 238 193 outlet;
#X obj 242 114 cnv 4 10 4 empty empty empty 20 12 0 14 -1 -66577 0
;
#X text 212 117 Sortie freq;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 2 0 23 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 25 0 23 0;
#X connect 26 0 27 0;
#X coords 0 -1 1 1 152 18 2 100 100;
#X restore 18 82 pd ARGO;
